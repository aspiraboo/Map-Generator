#ifndef __TOOLS_H__
#define __TOOLS_H__

#include "otpch.h"

using namespace std;

template <class T>
T rand(T min, T max)
{
	// static mt19937 generator((unsigned)time(nullptr));
	// uniform_real<float> u(min, max);

	// return u(generator);

    std::random_device rd;  //Will be used to obtain a seed for the random number engine
    std::mt19937 gen(rd()); //Standard mersenne_twister_engine seeded with rd()
    std::uniform_real_distribution<float> dis(min, max);
	return dis(gen);

    // for (int n = 0; n < 10; ++n) {
    //     // Use dis to transform the random unsigned int generated by gen into a 
    //     // double in [1, 2). Each call to dis(gen) generates a new random double
    //     std::cout << dis(gen) << ' ';
    // }	
}

void toLowerCase(std::string& source);

#endif